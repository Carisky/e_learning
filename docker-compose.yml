version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"            # хост:контейнер (чтобы не конфликтовать с бэком)
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=1
      - WATCHPACK_POLLING=true
      - NEXT_WEBPACK_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    command: sh -c "npm run dev"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "3300:3300"
    env_file:
      - ./backend/.env.docker     # для контейнера: DB_HOST=db
    environment:
      - TS_NODE_DEV=1             # просто метка; главное — флаг --poll в скрипте
    volumes:
      - ./backend:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npm run dev"

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=secret
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  db_data:
  frontend_node_modules:
  backend_node_modules:
