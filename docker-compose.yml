version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"            # хост:контейнер (чтобы не конфликтовать с бэком)
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=1
      - WATCHPACK_POLLING=true
      - NEXT_WEBPACK_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    command: sh -c "npm run dev"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "3300:3300"
    env_file:
      - ./backend/.env.docker     # для контейнера: DB_HOST=db
    environment:
      - TS_NODE_DEV=1             # просто метка; главное — флаг --poll в скрипте
    volumes:
      - ./backend:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    command: sh -c "npm run dev"

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=secret
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web console
    volumes:
      - minio_data:/data

  minio-setup:
    image: minio/mc:latest
    container_name: minio-setup
    depends_on:
      - minio
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - S3_BUCKET=courses
    entrypoint: >-
      /bin/sh -c "
      set -e; 
      echo 'Waiting for MinIO...';
      for i in 1 2 3 4 5 6 7 8 9 10; do
        (mc alias set local $${MINIO_ENDPOINT} $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} && break) || true;
        sleep 2;
      done;
      mc alias set local $${MINIO_ENDPOINT} $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      mc mb -p local/$${S3_BUCKET} || true;
      mc anonymous set download local/$${S3_BUCKET} || true;
      echo 'MinIO bucket ensured.';
      exit 0;
      "

volumes:
  db_data:
  frontend_node_modules:
  backend_node_modules:
  minio_data:
